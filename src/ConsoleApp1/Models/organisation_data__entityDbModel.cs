//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Xml;
using Biomind.Data.Models.Base;
using MySqlConnector;

namespace Biomind.Data.Models
{
	public partial class organisation_data__entityDbModel : BaseModel
	{
		public override string EntityName => "organisation_data__entity";

		public static string CacheKey(long id) => $"organisation_data__entity_{id}";
        protected long _id;
        protected string _code;
        protected string _name;
        protected long _entity_definition_id;
        protected bool _is_deleted;
        protected DateTime _created;
        protected DateTime _last_modified;
        protected string _all_identifiers;
        protected string _all_attributes;
        protected string _created_by;
        protected string _last_modified_by;

		public long id
		{
			get => _id;
			set => SetValue(ref _id, value);
		}
		public string code
		{
			get => _code;
			set => SetValue(ref _code, value);
		}
		public string name
		{
			get => _name;
			set => SetValue(ref _name, value);
		}
		public long entity_definition_id
		{
			get => _entity_definition_id;
			set => SetValue(ref _entity_definition_id, value);
		}
		public bool is_deleted
		{
			get => _is_deleted;
			set => SetValue(ref _is_deleted, value);
		}
		public DateTime created
		{
			get => _created;
			set => SetValue(ref _created, value);
		}
		public DateTime last_modified
		{
			get => _last_modified;
			set => SetValue(ref _last_modified, value);
		}
		public string all_identifiers
		{
			get => _all_identifiers;
			set => SetValue(ref _all_identifiers, value);
		}
		public string all_attributes
		{
			get => _all_attributes;
			set => SetValue(ref _all_attributes, value);
		}
		public string created_by
		{
			get => _created_by;
			set => SetValue(ref _created_by, value);
		}
		public string last_modified_by
		{
			get => _last_modified_by;
			set => SetValue(ref _last_modified_by, value);
		}
		
		public organisation_data__entityDbModel() { }
		public organisation_data__entityDbModel(
            long id,
            string code,
            string name,
            long entity_definition_id,
            bool is_deleted,
            DateTime created,
            DateTime last_modified,
            string all_identifiers,
            string all_attributes,
            string created_by,
            string last_modified_by)
		{
            _id = id;
            _code = code;
            _name = name;
            _entity_definition_id = entity_definition_id;
            _is_deleted = is_deleted;
            _created = created;
            _last_modified = last_modified;
            _all_identifiers = all_identifiers;
            _all_attributes = all_attributes;
            _created_by = created_by;
            _last_modified_by = last_modified_by;
		}

		public override IBaseModel SetValues(DataRow row, string propertyPrefix)
		{
            _id = row.GetValue<long>($"{propertyPrefix}id") ?? default(long);
            _code = row.GetText($"{propertyPrefix}code");
            _name = row.GetText($"{propertyPrefix}name");
            _entity_definition_id = row.GetValue<long>($"{propertyPrefix}entity_definition_id") ?? default(long);
            _is_deleted = row.GetValue<bool>($"{propertyPrefix}is_deleted") ?? default(bool);
            _created = row.GetValue<DateTime>($"{propertyPrefix}created") ?? default(DateTime);
            _last_modified = row.GetValue<DateTime>($"{propertyPrefix}last_modified") ?? default(DateTime);
            _all_identifiers = row.GetText($"{propertyPrefix}all_identifiers");
            _all_attributes = row.GetText($"{propertyPrefix}all_attributes");
            _created_by = row.GetText($"{propertyPrefix}created_by");
            _last_modified_by = row.GetText($"{propertyPrefix}last_modified_by");
			return this;
		}

		public override List<ValidationError> Validate()
		{
			var validationErrors = new List<ValidationError>();

			if (code == null)
				validationErrors.Add(new ValidationError(nameof(code), "Value cannot be null"));
			if (!string.IsNullOrEmpty(code) && code.Length > 128)
				validationErrors.Add(new ValidationError(nameof(code), "Max length is 128"));

			if (!string.IsNullOrEmpty(name) && name.Length > 128)
				validationErrors.Add(new ValidationError(nameof(name), "Max length is 128"));

			if (created == DateTime.MinValue)
				validationErrors.Add(new ValidationError(nameof(created), "Value cannot be default."));
			if (last_modified == DateTime.MinValue)
				validationErrors.Add(new ValidationError(nameof(last_modified), "Value cannot be default."));
			if (!string.IsNullOrEmpty(all_identifiers) && all_identifiers.Length > 65535)
				validationErrors.Add(new ValidationError(nameof(all_identifiers), "Max length is 65535"));

			if (!string.IsNullOrEmpty(all_attributes) && all_attributes.Length > 65535)
				validationErrors.Add(new ValidationError(nameof(all_attributes), "Max length is 65535"));

			if (created_by == null)
				validationErrors.Add(new ValidationError(nameof(created_by), "Value cannot be null"));
			if (!string.IsNullOrEmpty(created_by) && created_by.Length > 36)
				validationErrors.Add(new ValidationError(nameof(created_by), "Max length is 36"));

			if (last_modified_by == null)
				validationErrors.Add(new ValidationError(nameof(last_modified_by), "Value cannot be null"));
			if (!string.IsNullOrEmpty(last_modified_by) && last_modified_by.Length > 36)
				validationErrors.Add(new ValidationError(nameof(last_modified_by), "Max length is 36"));

			return validationErrors;
		}

		public static string Schema = "democlient";
		public static string TableName = "organisation_data__entity";
		public static List<ColumnDefinition> Columns => new List<ColumnDefinition>
		{
			new ColumnDefinition("id", typeof(long), "[bigint]", MySqlDbType.Int64, false, true, true),
			new ColumnDefinition("code", typeof(string), "[varchar](128)", MySqlDbType.VarChar, false, false, false),
			new ColumnDefinition("name", typeof(string), "[varchar](128)", MySqlDbType.VarChar, true, false, false),
			new ColumnDefinition("entity_definition_id", typeof(long), "[bigint]", MySqlDbType.Int64, false, false, false),
			new ColumnDefinition("is_deleted", typeof(bool), "[bit]", MySqlDbType.Bit, false, false, false),
			new ColumnDefinition("created", typeof(DateTime), "[timestamp]", MySqlDbType.Timestamp, false, false, false),
			new ColumnDefinition("last_modified", typeof(DateTime), "[timestamp]", MySqlDbType.Timestamp, false, false, false),
			new ColumnDefinition("all_identifiers", typeof(string), "[text](65535)", MySqlDbType.Text, true, false, false),
			new ColumnDefinition("all_attributes", typeof(string), "[text](65535)", MySqlDbType.Text, true, false, false),
			new ColumnDefinition("created_by", typeof(string), "[char](36)", MySqlDbType.VarChar, false, false, false),
			new ColumnDefinition("last_modified_by", typeof(string), "[char](36)", MySqlDbType.VarChar, false, false, false),

		};
	}
}

